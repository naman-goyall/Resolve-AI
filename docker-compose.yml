version: "3.9"

services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  collector:
    build:
      context: .
      dockerfile: ./services/collector/Dockerfile
    environment:
      - REDIS_ADDR=redis://redis:6379/0
      - STREAM_NAME=logs
      - MAX_MESSAGE_BYTES=65536
      - TRIM_MAXLEN=50000
      - CORS_ALLOW_ORIGINS=http://localhost:8080
    depends_on:
      - redis
    ports:
      - "8081:8081"

  distributor:
    build:
      context: .
      dockerfile: ./services/distributor/Dockerfile
    environment:
      - REDIS_ADDR=redis://redis:6379/0
      - STREAM_NAME=logs
      - CONSUMER_GROUP=distributors
      - CONSUMER_NAME=dist-1
      - PENDING_IDLE_MS=60000
      - BATCH_COUNT=128
      - BLOCK_MS=2000
      - SUBSCRIBER_QUEUE_LEN=1000
      - CORS_ALLOW_ORIGINS=http://localhost:8080
    depends_on:
      - redis
    ports:
      - "8082:8082"

  distributor2:
    build:
      context: .
      dockerfile: ./services/distributor/Dockerfile
    environment:
      - REDIS_ADDR=redis://redis:6379/0
      - STREAM_NAME=logs
      - CONSUMER_GROUP=distributors
      - CONSUMER_NAME=dist-2
      - PENDING_IDLE_MS=60000
      - BATCH_COUNT=128
      - BLOCK_MS=2000
      - SUBSCRIBER_QUEUE_LEN=1000
      - CORS_ALLOW_ORIGINS=http://localhost:8080
    depends_on:
      - redis

  ui:
    build:
      context: .
      dockerfile: ./services/ui/Dockerfile
    environment:
      - DISTRIBUTOR_HTTP=http://localhost:8082
    depends_on:
      - distributor
    ports:
      - "8080:8080"

volumes:
  redis-data:

